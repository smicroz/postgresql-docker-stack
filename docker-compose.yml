services:
  postgres:
    image: postgres:17-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-mydatabase}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
      # Configuraciones adicionales de seguridad
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256 --auth-local=trust"
      # Configuraciones de PostgreSQL mejoradas
      POSTGRES_HOST_AUTH_METHOD: scram-sha-256
      # Variables de optimización
      POSTGRES_SHARED_PRELOAD_LIBRARIES: pg_stat_statements
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d:ro
      # Configuraciones adicionales de PostgreSQL
      - ./postgresql.conf:/etc/postgresql/postgresql.conf:ro
    networks:
      - postgres_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-mydatabase}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    # Límites de recursos para seguridad
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 256M
          cpus: '0.25'
    # Configuraciones de seguridad adicionales
    security_opt:
      - no-new-privileges:true
      - apparmor:unconfined
    read_only: false
    tmpfs:
      - /tmp:noexec,nosuid,size=256m
      - /var/run/postgresql:noexec,nosuid,size=64m
    # Usuario no root para mayor seguridad
    user: "999:999"
    # Configuración de logging
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin_web
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@example.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
      PGADMIN_CONFIG_LOGIN_BANNER: '"PostgreSQL Administration - Authorized Access Only"'
      # Configuraciones optimizadas para prevenir errores comunes
      PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION: 'False'
      PGADMIN_CONFIG_SESSION_COOKIE_SECURE: 'False'
      PGADMIN_CONFIG_SESSION_COOKIE_HTTPONLY: 'True'
      PGADMIN_CONFIG_SESSION_COOKIE_SAMESITE: 'Lax'
      PGADMIN_CONFIG_WTF_CSRF_ENABLED: 'False'
      PGADMIN_CONFIG_AUTO_CREATE_DB: 'True'
      PGADMIN_CONFIG_CONSOLE_LOG_LEVEL: 20
      # Variables adicionales para estabilidad
      PGADMIN_CONFIG_DATA_DIR: '/var/lib/pgadmin'
      PGADMIN_CONFIG_LOG_FILE: '/var/log/pgadmin/pgadmin4.log'
      PGADMIN_CONFIG_SQLITE_PATH: '/var/lib/pgadmin/pgadmin4.db'
      PGADMIN_CONFIG_SESSION_DB_PATH: '/var/lib/pgadmin/sessions'
      PGADMIN_CONFIG_UPGRADE_CHECK_ENABLED: 'False'
      PGADMIN_CONFIG_WTF_CSRF_TIME_LIMIT: 'None'
      PGADMIN_CONFIG_WTF_CSRF_CHECK_DEFAULT: 'False'
    ports:
      - "${PGLADMIN_PORT:-5050}:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      # Configuración adicional para persistir configuraciones
      - ./pgadmin-config:/pgadmin-config:ro
    networks:
      - postgres_network
    depends_on:
      postgres:
        condition: service_healthy
    # Límites de recursos
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 128M
          cpus: '0.1'
    # Configuraciones de seguridad
    security_opt:
      - no-new-privileges:true
      - apparmor:unconfined
    read_only: false
    tmpfs:
      - /tmp:noexec,nosuid,size=128m
    # Usuario no root
    user: "5050:5050"
    # Configuración de logging
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "3"

volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./postgres_data
  pgadmin_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./pgadmin_data

networks:
  postgres_network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: postgres0
      com.docker.network.bridge.enable_ip_masquerade: 'true'
      com.docker.network.bridge.enable_icc: 'true'
    ipam:
      config:
        - subnet: 172.20.0.0/24
          gateway: 172.20.0.1
    # Configuraciones de seguridad de red
    internal: false
    attachable: false
